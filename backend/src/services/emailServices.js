const nodemailer = require('nodemailer');
require('dotenv').config();
console.log('>>> GMAIL ƒëang d√πng l√†:', process.env.EMAIL_APP);

const sendEmailService = async (data, redirectLink) => {
    // create reusable transporter object using the default SMTP transport
    let transporter = nodemailer.createTransport({
        host: 'smtp.gmail.com',
        port: 587,
        secure: false, // true for 465, false for other ports
        auth: {
            user: process.env.EMAIL_APP, // generated ethereal user
            pass: process.env.EMAIL_APP_PASSWORD, // generated ethereal password
        },
    });

    // send mail with defined transport object
    let info = await transporter.sendMail({
        from: '"Vanphu" ', // sender address
        to: data.email, // list of receivers
        subject:
            data.language === 'vi'
                ? 'X√°c nh·∫≠n th√¥ng tin d·∫∑t l·ªãch kh√°m b·ªánh'
                : 'Confirm medical appointment booking information', // Subject line
        html: changLanguageEmail(data, data.language, redirectLink),
    });
};

const changLanguageEmail = (data, language, redirectLink) => {
    let result = '';
    if (language === 'vi') {
        result = `
        <h2>Xin ch√†o ${data.namePatient},</h2>
        <p>B·∫°n nh·∫≠n ƒë∆∞·ª£c email n√†y v√¨ ƒë√£ ƒë·∫∑t l·ªãch kh√°m b·ªánh tr·ª±c tuy·∫øn tr√™n h·ªá th·ªëng <strong>BookingCare</strong>.</p>
        <p><strong>Th√¥ng tin chi ti·∫øt l·ªãch kh√°m:</strong></p>
        <ul>
            <li><b>Th·ªùi gian:</b> ${data.exactTime}</li>
            <li><b>B√°c sƒ©:</b> ${data.nameDoctor}</li>
        </ul>
        <p>Vui l√≤ng nh·∫•n v√†o ƒë∆∞·ªùng d·∫´n b√™n d∆∞·ªõi ƒë·ªÉ x√°c nh·∫≠n v√† ho√†n t·∫•t th·ªß t·ª•c ƒë·∫∑t l·ªãch:</p>
        <a href="${redirectLink}" target="_blank">X√°c nh·∫≠n l·ªãch kh√°m</a>
        <p>Xin ch√¢n th√†nh c·∫£m ∆°n qu√Ω kh√°ch ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!</p>
        `;
    } else if (language === 'en') {
        result = `
        <h2>Dear ${data.namePatient},</h2>
        <p>You received this email because you made an online medical appointment via <strong>BookingCare</strong>.</p>
        <p><strong>Appointment details:</strong></p>
        <ul>
            <li><b>Time:</b> ${data.exactTime}</li>
            <li><b>Doctor:</b> ${data.nameDoctor}</li>
        </ul>
        <p>Please click the link below to confirm and complete your appointment:</p>
        <a href="${redirectLink}" target="_blank">Confirm Appointment</a>
        <p>Thank you for trusting and using our services!</p>
        `;
    }
    return result;
};


const sendEmailRemedyService = async (data, redirectLink) => {
    // create reusable transporter object using the default SMTP transport

    let transporter = nodemailer.createTransport({
        host: 'smtp.gmail.com',
        port: 587,
        secure: false, // true for 465, false for other ports
        auth: {
            user: process.env.EMAIL_APP, // generated ethereal user
            pass: process.env.EMAIL_APP_PASSWORD, // generated ethereal password
        },
    });

    // send mail with defined transport object
    let info = await transporter.sendMail({
        from: '"Booking care üëª" ', // sender address
        to: data.email, // list of receivers
        subject: data.language === 'vi' ? 'K·∫øt qu·∫£ kh√°m b·ªánh' : 'Examination results', // Subject line
        html: changLanguageEmailRemedy(data, data.language, redirectLink),
        attachments: [
            {
                filename: 'image.jpg',
                content: data.image.split('base64,')[1],
                encoding: 'base64',
            },
        ],
    });
};

const changLanguageEmailRemedy = (data, language) => {
    let result = '';
    if (language === 'vi') {
        result = `
        <h2>Xin ch√†o ${data?.namePatient},</h2>
        <p>C·∫£m ∆°n b·∫°n ƒë√£ l·ª±a ch·ªçn d·ªãch v·ª• kh√°m b·ªánh t·∫°i <strong>BookingCare</strong>.</p>
        <p><strong>Th√¥ng tin cu·ªôc h·∫πn:</strong></p>
        <ul>
            <li><b>Th·ªùi gian:</b> ${data.exactTime.valueVi}</li>
            <li><b>B√°c sƒ©:</b> ${data?.dataAccDoctor?.firstName} ${data?.dataAccDoctor?.lastName}</li>
        </ul>
        <p><strong>L∆∞u √Ω t·ª´ b√°c sƒ©:</strong></p>
        <p>${data.note}</p>
        <p>Vui l√≤ng xem file ƒë√≠nh k√®m ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt v·ªÅ ƒë∆°n thu·ªëc v√† k·∫øt qu·∫£ kh√°m b·ªánh.</p>
        <p>Ch√∫c b·∫°n mau kh·ªèe!</p>
        `;
    } else if (language === 'en') {
        result = `
        <h2>Dear ${data.namePatient},</h2>
        <p>Thank you for using our service at <strong>BookingCare</strong>.</p>
        <p><strong>Appointment information:</strong></p>
        <ul>
            <li><b>Time:</b> ${data.exactTime.valueEn}</li>
            <li><b>Doctor:</b> ${data?.dataAccDoctor?.lastName} ${data?.dataAccDoctor?.firstName}</li>
        </ul>
        <p><strong>Doctor's Note:</strong></p>
        <p>${data.note}</p>
        <p>Please check the attached file for details of your prescription and examination result.</p>
        <p>We wish you a speedy recovery!</p>
        `;
    }
    return result;
};


const sendEmailCancelAppointmentService = async (data, redirectLink) => {
    // create reusable transporter object using the default SMTP transport

    let transporter = nodemailer.createTransport({
        host: 'smtp.gmail.com',
        port: 587,
        secure: false, // true for 465, false for other ports
        auth: {
            user: process.env.EMAIL_APP, // generated ethereal user
            pass: process.env.EMAIL_APP_PASSWORD, // generated ethereal password
        },
    });

    // send mail with defined transport object
    let info = await transporter.sendMail({
        from: '"Booking care üëª" ', // sender address
        to: data.email, // list of receivers
        subject: data.language === 'vi' ? `${data.title} ` : '...', // Subject line
        html: `
            <h2>${data.language === 'vi' ? 'Th√¥ng b√°o h·ªßy l·ªãch kh√°m' : 'Appointment Cancellation Notice'}</h2>
            <p>${data.reason}</p>
            <p>${data.language === 'vi'
                ? 'Ch√∫ng t√¥i r·∫•t ti·∫øc v·ªÅ s·ª± b·∫•t ti·ªán n√†y. Vui l√≤ng li√™n h·ªá l·∫°i n·∫øu c·∫ßn ƒë·∫∑t l·ªãch m·ªõi.'
                : 'We apologize for any inconvenience. Please contact us if you wish to reschedule.'}
            </p>
        `,

    });
};

module.exports = {
    sendEmailService,
    sendEmailRemedyService,
    sendEmailCancelAppointmentService,
};
